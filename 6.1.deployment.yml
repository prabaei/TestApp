apiVersion: apps/v1 #version of the API to use
kind: Deployment #What kind of object we're deploying
metadata: #information about our object we're deploying
  name: nginx-deployment #Name of the deployment
  labels: #A tag on the deployments created
    app: nginx
spec: #specifications for our object
  strategy:

  replicas: 10 #The number of pods that should always be running
  selector: #which pods the replica set should be responsible for
    matchLabels:
      app: nginx #any pods with labels matching this I'm responsible for.
  template: #The pod template that gets deployed
    metadata:
      labels: #A tag on the replica sets created
        app: nginx
    spec:
      containers:
      - name: nginx-container #the name of the container within the pod
        image: nginx:1.14.2 #which container image should be pulled
      # image: nginxdemos/hello:plain-text
        ports:
        - containerPort: 80 #the port of the container within the pod

# kubectl apply -f 6.1.deployment.yml 

#RollOut
# kubectl set image deployment/nginx-deployment nginx-container=nginx:1.16.1 --record

# kubectl rollout status deployment/nginx-deployment

#kubectl describe deploy

#RollOut - false
# kubectl set image deployment/nginx-deployment nginx-container=nginx:1.168 --record

# kubectl get rs

#Rollback revision view
# kubectl rollout history deployment/nginx-deployment

#kubectl rollout history deployment/nginx-deployment --revision=2

# kubectl rollout undo deployment/nginx-deployment

# kubectl rollout undo deployment/nginx-deployment --to-revision=2

##Scaling deployments
# kubectl scale deployment/nginx-deployment --replicas=10



# kubectl set image deployment/nginx-deployment nginx-container=nginx:nothere --record
